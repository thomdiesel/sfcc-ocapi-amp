/**
 * Shop API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 17.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GiftCertificate', 'model/GiftCertificateRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/GiftCertificate'), require('../model/GiftCertificateRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.ShopApi) {
      root.ShopApi = {};
    }
    root.ShopApi.Gift_certificateApi = factory(root.ShopApi.ApiClient, root.ShopApi.GiftCertificate, root.ShopApi.GiftCertificateRequest);
  }
}(this, function(ApiClient, GiftCertificate, GiftCertificateRequest) {
  'use strict';

  /**
   * Gift_certificate service.
   * @module api/Gift_certificateApi
   * @version 17.3
   */

  /**
   * Constructs a new Gift_certificateApi. 
   * @alias module:api/Gift_certificateApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the postGiftCertificate operation.
     * @callback module:api/Gift_certificateApi~postGiftCertificateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GiftCertificate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Action to retrieve an existing gift certificate.
     * @param {Object} opts Optional parameters
     * @param {module:model/GiftCertificateRequest} opts.body 
     * @param {module:api/Gift_certificateApi~postGiftCertificateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GiftCertificate}
     */
    this.postGiftCertificate = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['customers_auth', 'oauth2_application'];
      var contentTypes = ['application/json', 'text/xml', 'application/xml'];
      var accepts = ['application/json', 'text/xml', 'application/xml'];
      var returnType = GiftCertificate;

      return this.apiClient.callApi(
        '/gift_certificate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
