/**
 * Shop API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 17.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/OrderSearchHit', 'model/Query', 'model/ResultPage', 'model/Sort'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./OrderSearchHit'), require('./Query'), require('./ResultPage'), require('./Sort'));
  } else {
    // Browser globals (root is window)
    if (!root.ShopApi) {
      root.ShopApi = {};
    }
    root.ShopApi.OrderSearchResult = factory(root.ShopApi.ApiClient, root.ShopApi.OrderSearchHit, root.ShopApi.Query, root.ShopApi.ResultPage, root.ShopApi.Sort);
  }
}(this, function(ApiClient, OrderSearchHit, Query, ResultPage, Sort) {
  'use strict';




  /**
   * The OrderSearchResult model module.
   * @module model/OrderSearchResult
   * @version 17.3
   */

  /**
   * Constructs a new <code>OrderSearchResult</code>.
   * Document representing an order search result.
   * @alias module:model/OrderSearchResult
   * @class
   */
  var exports = function() {
    var _this = this;












  };

  /**
   * Constructs a <code>OrderSearchResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrderSearchResult} obj Optional instance to populate.
   * @return {module:model/OrderSearchResult} The populated <code>OrderSearchResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('count')) {
        obj['count'] = ApiClient.convertToType(data['count'], 'Number');
      }
      if (data.hasOwnProperty('data')) {
        obj['data'] = ApiClient.convertToType(data['data'], [Object]);
      }
      if (data.hasOwnProperty('expand')) {
        obj['expand'] = ApiClient.convertToType(data['expand'], ['String']);
      }
      if (data.hasOwnProperty('hits')) {
        obj['hits'] = ApiClient.convertToType(data['hits'], [OrderSearchHit]);
      }
      if (data.hasOwnProperty('next')) {
        obj['next'] = ResultPage.constructFromObject(data['next']);
      }
      if (data.hasOwnProperty('previous')) {
        obj['previous'] = ResultPage.constructFromObject(data['previous']);
      }
      if (data.hasOwnProperty('query')) {
        obj['query'] = Query.constructFromObject(data['query']);
      }
      if (data.hasOwnProperty('select')) {
        obj['select'] = ApiClient.convertToType(data['select'], 'String');
      }
      if (data.hasOwnProperty('sorts')) {
        obj['sorts'] = ApiClient.convertToType(data['sorts'], [Sort]);
      }
      if (data.hasOwnProperty('start')) {
        obj['start'] = ApiClient.convertToType(data['start'], 'Number');
      }
      if (data.hasOwnProperty('total')) {
        obj['total'] = ApiClient.convertToType(data['total'], 'Number');
      }
    }
    return obj;
  }

  /**
   * The number of returned documents.
   * @member {Number} count
   */
  exports.prototype['count'] = undefined;
  /**
   * @member {Array.<Object>} data
   */
  exports.prototype['data'] = undefined;
  /**
   * The list of expands set for the search request. Expands are optional.
   * @member {Array.<String>} expand
   */
  exports.prototype['expand'] = undefined;
  /**
   * The sorted array of search hits. This array can be empty.
   * @member {Array.<module:model/OrderSearchHit>} hits
   */
  exports.prototype['hits'] = undefined;
  /**
   * The data that can be used (as parameters on the search request) to retrieve the next result page.
   * @member {module:model/ResultPage} next
   */
  exports.prototype['next'] = undefined;
  /**
   * The data that can be used to retrieve the previous result page (as parameters on the search request).
   * @member {module:model/ResultPage} previous
   */
  exports.prototype['previous'] = undefined;
  /**
   * The query passed into the search
   * @member {module:model/Query} query
   */
  exports.prototype['query'] = undefined;
  /**
   * The fields that you want to select.
   * @member {String} select
   */
  exports.prototype['select'] = undefined;
  /**
   * The list of sort clauses configured for the search request. Sort clauses are optional.
   * @member {Array.<module:model/Sort>} sorts
   */
  exports.prototype['sorts'] = undefined;
  /**
   * The zero-based index of the first search hit to include in the result.
   * @member {Number} start
   */
  exports.prototype['start'] = undefined;
  /**
   * The total number of documents.
   * @member {Number} total
   */
  exports.prototype['total'] = undefined;



  return exports;
}));


